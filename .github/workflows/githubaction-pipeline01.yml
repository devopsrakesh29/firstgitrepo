# This is a basic workflow to help you get started with Actions

name: terraform-infra

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
 #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform_infra: 
    # The type of runner that the job will run on
    runs-on: self-hosted
    defaults:
      run:
        shell: cmd

    


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: terraform setup
        # Sets up Terraform CLI in the GitHub Actions runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7
          

      # Runs a set of commands using the runners shell
      - name: terraform init
        shell: cmd
        run: terraform init
        working-directory: ./environment/dev
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }} 
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: terraform fmt
        run: terraform fmt 
        working-directory: ./environment/dev

      - name: terraform validate
        run: terraform validate
        working-directory: ./environment/dev
          
      - name: terraform plan    
        run: terraform plan
        working-directory: ./environment/dev
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }} 
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      # - name: terraform show plan
      #   run: terraform show tfplan
      #   working-directory: ./environment/dev

      - name: terraform apply
     #    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply --auto-approve 
        working-directory: ./environment/dev
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }} 
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    
  


